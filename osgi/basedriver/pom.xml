<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.fourthline.cling</groupId>
        <artifactId>cling-osgi</artifactId>
        <version>2.0-SNAPSHOT</version>
    </parent>

    <name>Cling OSGi Base Driver</name>
    <artifactId>cling-osgi-basedriver</artifactId>
    <packaging>bundle</packaging>

    <properties>
        <SymbolicName>org.fourthline.cling.osgi.basedriver</SymbolicName>
    </properties>

    <build>
		<finalName>${SymbolicName}.${project.version}</finalName>
        <plugins>

            <!-- Generate documentation for distribution packaging -->
            <plugin>
                <groupId>org.fourthline.lemma</groupId>
                <artifactId>lemma-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>prepare-package-manual</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>manual</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!-- Have no real tests yet -->
                    <sourceDirectories>
                        <sourceDirectory>src/main/java</sourceDirectory>
                    </sourceDirectories>
                </configuration>
            </plugin>

            <!-- Build an OSGi bundle -->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <extensions>true</extensions>
                <configuration>
                    <!-- Eclipse wants the META-INF in root and not in target. Bad Eclipse. -->
                    <manifestLocation>META-INF</manifestLocation>
                    <instructions>
                        <Bundle-SymbolicName>${SymbolicName}</Bundle-SymbolicName>
                        <Bundle-Name>${project.name}</Bundle-Name>
                        <Bundle-Activator>org.fourthline.cling.osgi.basedriver.Activator</Bundle-Activator>
                        <Bundle-Vendor>4th Line</Bundle-Vendor>
                        <Bundle-Author>Bruce Green</Bundle-Author>
                        <Bundle-Description>
                            This UPnP Base Driver acts as software bridge between UPnP networks and OSGi.
                        </Bundle-Description>
                        <Bundle-DocURL>http://4thline.org/projects/cling/</Bundle-DocURL>
                        <Import-Package>
                            org.osgi.framework,
                            org.osgi.service.event,
                            org.osgi.service.upnp,
                            org.osgi.util.tracker,
                            javax.net.ssl.*,
                            javax.xml.*,
                            org.w3c.dom.*,
                            org.xml.sax.*,
                            org.seamless.http.*,
                            org.seamless.util.*,
                            org.seamless.xml.*,
                            !android.*,
                            !com.sun.*,
                            !sun.net.*,
                            !org.apache.*,
                            !javax.*,
                            !org.hibernate.*
                        </Import-Package>
                        <Embed-Transitive>false</Embed-Transitive>
                        <Embed-Dependency>
                            cling-core,
                            seamless-util,
                            seamless-http,
                            seamless-xml,
                            httpcore,
                            httpclient,
                            commons-logging,
                            commons-codec
                        </Embed-Dependency>
                    </instructions>
                </configuration>
            </plugin>

            <!-- Clean up Eclipse mess -->
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>META-INF</directory>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>

            <!-- Website lifecycle -->
            <plugin>
                <artifactId>maven-site-plugin</artifactId>
                <configuration>
                    <reportPlugins>
                        <!-- THESE IGNORE GLOBAL PLUGIN MANAGEMENT! -->

                        <!-- Build the manual for 'site' lifecycle -->
                        <plugin>
                            <groupId>org.fourthline.lemma</groupId>
                            <artifactId>lemma-maven-plugin</artifactId>
                            <reportSets>
                                <reportSet>
                                    <reports>
                                        <report>site-manual</report>
                                    </reports>
                                </reportSet>
                            </reportSets>
                            <configuration>
                                <!-- Have no real tests yet -->
                                <sourceDirectories>
                                    <sourceDirectory>src/main/java</sourceDirectory>
                                </sourceDirectories>
                            </configuration>
                        </plugin>

                        <!-- Javadoc on the website -->
                        <plugin>
                            <artifactId>maven-javadoc-plugin</artifactId>
                            <reports>
                                <report>javadoc</report>
                            </reports>
                            <configuration>
                                <quiet>true</quiet>
                                <detectOfflineLinks>false</detectOfflineLinks>
                            </configuration>
                        </plugin>

                        <!-- We want cross-referenced source code -->
                        <plugin>
                            <artifactId>maven-jxr-plugin</artifactId>
                        </plugin>

                    </reportPlugins>
                </configuration>
            </plugin>

            <plugin>
            	<groupId>org.apache.maven.plugins</groupId>
            	<artifactId>maven-compiler-plugin</artifactId>
            	<version>2.5.1</version>
            </plugin>

        </plugins>

    </build>

    <dependencies>

        <dependency>
            <groupId>org.fourthline.cling</groupId>
            <artifactId>cling-core</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.seamless</groupId>
            <artifactId>seamless-util</artifactId>
            <version>${seamless.version}</version>
        </dependency>
        <dependency>
            <groupId>org.seamless</groupId>
            <artifactId>seamless-http</artifactId>
            <version>${seamless.version}</version>
        </dependency>
        <dependency>
            <groupId>org.seamless</groupId>
            <artifactId>seamless-xml</artifactId>
            <version>${seamless.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>${commons.codec.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpcore</artifactId>
            <version>${apache.httpcomponents.version}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>${apache.httpcomponents.version}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>${commons.logging.version}</version>
            <scope>runtime</scope>
        </dependency>

    </dependencies>
</project>
